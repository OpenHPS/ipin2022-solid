"use strict";(self["webpackChunkipin2022_geolocationapi"]=self["webpackChunkipin2022_geolocationapi"]||[]).push([[411],{3704:function(e,t,n){function r(e,t){let n=e.length-t,r=0;do{for(let n=t;n>0;n--)e[r+t]+=e[r],r++;n-=t}while(n>0)}function i(e,t,n){let r=0,i=e.length;const o=i/n;while(i>t){for(let n=t;n>0;--n)e[r+t]+=e[r],++r;i-=t}const l=e.slice();for(let a=0;a<o;++a)for(let t=0;t<n;++t)e[n*a+t]=l[(n-t-1)*o+a]}function o(e,t,n,o,l,a){if(!t||1===t)return e;for(let r=0;r<l.length;++r){if(l[r]%8!==0)throw new Error("When decoding with predictor, only multiple of 8 bits are supported.");if(l[r]!==l[0])throw new Error("When decoding with predictor, all samples must have the same size.")}const s=l[0]/8,c=2===a?1:l.length;for(let f=0;f<o;++f){if(f*c*n*s>=e.byteLength)break;let o;if(2===t){switch(l[0]){case 8:o=new Uint8Array(e,f*c*n*s,c*n*s);break;case 16:o=new Uint16Array(e,f*c*n*s,c*n*s/2);break;case 32:o=new Uint32Array(e,f*c*n*s,c*n*s/4);break;default:throw new Error(`Predictor 2 not allowed with ${l[0]} bits per sample.`)}r(o,c,s)}else 3===t&&(o=new Uint8Array(e,f*c*n*s,c*n*s),i(o,c,s))}return e}n.d(t,{Z:function(){return l}});class l{async decode(e,t){const n=await this.decodeBlock(t),r=e.Predictor||1;if(1!==r){const t=!e.StripOffsets,i=t?e.TileWidth:e.ImageWidth,l=t?e.TileLength:e.RowsPerStrip||e.ImageLength;return o(n,r,i,l,e.BitsPerSample,e.PlanarConfiguration)}return n}}},17411:function(e,t,n){n.r(t),n.d(t,{default:function(){return i}});var r=n(3704);class i extends r.Z{decodeBlock(e){const t=new DataView(e),n=[];for(let r=0;r<e.byteLength;++r){let e=t.getInt8(r);if(e<0){const i=t.getUint8(r+1);e=-e;for(let t=0;t<=e;++t)n.push(i);r+=1}else{for(let i=0;i<=e;++i)n.push(t.getUint8(r+i+1));r+=e+1}}return new Uint8Array(n).buffer}}}}]);
//# sourceMappingURL=411-legacy.8ef3cc43.js.map